name: Publish Docker Images

on:
  workflow_dispatch: # Manual trigger
  push:
    # Trigger on main branch only if changes are detected in the docker directory
    branches: ["main"]
    paths: ["docker/Dockerfile"]

jobs:
  publish-image:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3.8.1
        with:
          cosign-release: "v2.2.4"

      # Set up QEMU to enable multi-platform builds
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to Github Container Registry (GHCR)
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Pihole version from Dockerfile
        id: extract-version
        run: |
          VERSION=$(grep -oP '(?<=pihole/pihole:)\S+' docker/Dockerfile)
          echo "Extracted pihole version is: $VERSION"
          echo "PIHOLE_VERSION=$VERSION" >> "$GITHUB_OUTPUT"

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5.7.0
        with:
          # List of Docker images to use as base name for tags
          images: |
            ghcr.io/${{ github.repository_owner }}/docker-pihole-unbound
          # Generate Docker tags based on the following events/attributes
          tags: |
            type=raw,value=${{ steps.extract-version.outputs.PIHOLE_VERSION }}
            type=raw,value=latest
          # Set the OCI Image Specification source label to the base image repository, to enable tools
          # like Renovate and Dependabot to automatically fetch release notes for new versions.
          # We cannot use https://github.com/pi-hole/pi-hole directly, since it uses a different versioning scheme.
          labels: |
            org.opencontainers.image.source=https://github.com/pi-hole/docker-pi-hole

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6.15.0
        with:
          context: docker/
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/386,linux/arm/v6,linux/arm/v7,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
